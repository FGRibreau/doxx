{"version":3,"sources":["theme.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;qBACK,OAAO;;;;oBACR,MAAM;;;;oBACN,MAAM;;;;sBACJ,QAAQ;;;;sBACb,QAAQ;;;;uBACL,UAAU;;;;mBACX,KAAK;;;;QACd,6BAA6B;;2BACnB,eAAe;;;;;;;;;IAK1B,KAAK;AACE,WADP,KAAK,CACG,OAAO,EAAE;0BADjB,KAAK;;AAEL,QAAI,CAAC,KAAK,qBAAQ,CAAC;AACnB,QAAI,CAAC,OAAO,GAAG;AACb,WAAK,EAAE;AACL,YAAI,EAAE,OAAO,CAAC,KAAK;AACnB,YAAI,EAAE,kBAAK,IAAI,CAAC,yBAAK,IAAI,EAAE,QAAQ,CAAC;AACpC,cAAM,EAAE;AACN,cAAI,EAAE,OAAO,CAAC,MAAM;SACrB;OACF;AACD,cAAQ,EAAE;AACR,YAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,IAAI;AAC3B,iBAAS,EAAE,qBAAM;AACf,iBAAO,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC;SAChC;OACF;KACF,CAAC;GACH;;;;;;;eAlBC,KAAK;;WAuBF,mBAAG;;;AACR,UAAI,CAAC,GAAG,kBAAK,KAAK,EAAE,CAAC;;;;;;AAMrB,UAAI,QAAQ,GAAG;;;;;;AAMb,kBAAU,EAAE,sBAAM;AAChB,cAAI,CAAC,GAAG,kBAAK,KAAK,EAAE,CAAC;AACrB,cAAI,KAAK,GAAG,MAAK,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC;;;;AAIpC,cAAI,GAAG,GAAG;AACR,iBAAK,EAAE;AACL,kBAAI,EAAE,MAAK,OAAO,CAAC,KAAK,CAAC,IAAI;aAC9B;WACF,CAAC;;;AAGF,cAAI,IAAI,GAAG;AACT,iBAAK,EAAE;AACL,kBAAI,EAAE,MAAK,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI;aACrC;WACF,CAAC;;;AAGF,cAAI,MAAM,GAAG;AACX,gBAAI,EAAE,kBAAK,IAAI,CAAC,kBAAK,IAAI,CACrB,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,mBAAmB,CAAC,EACtC,KAAK,GAAG,UAAU,CAAC;WACtB,CAAC;;;AAGF,cAAI,QAAQ,GAAG;AACb,gBAAI,EAAE,kBAAK,IAAI,CAAC,kBAAK,IAAI,CACrB,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,mBAAmB,CAAC,EACtC,KAAK,GAAG,YAAY,CAAC;WACxB,CAAC;;;AAGF,8BAAE,MAAM,CAAC,GAAG,EAAE;AACZ,eAAG,EAAE;AACH,kBAAI,EAAE,kBAAK,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC;aACrC;WACF,CAAC,CAAC;AACH,8BAAE,MAAM,CAAC,IAAI,EAAE;AACb,eAAG,EAAE;AACH,kBAAI,EAAE,kBAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC;aACzC;WACF,CAAC,CAAC;;;AAGH,8BAAE,MAAM,CAAC,GAAG,EAAE;AACZ,cAAE,EAAE;AACF,kBAAI,EAAE,kBAAK,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC;aACpC;WACF,CAAC,CAAC;AACH,8BAAE,MAAM,CAAC,IAAI,EAAE;AACb,cAAE,EAAE;AACF,kBAAI,EAAE,kBAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;aACxC;WACF,CAAC,CAAC;;;AAGH,8BAAE,MAAM,CAAC,GAAG,EAAE;AACZ,oBAAQ,EAAR,QAAQ;WACT,CAAC,CAAC;AACH,8BAAE,MAAM,CAAC,IAAI,EAAE;AACb,oBAAQ,EAAE;AACR,kBAAI,EAAE,kBAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC;aAC9C;WACF,CAAC,CAAC;;AAEH,WAAC,CAAC,OAAO,CAAC;AACR,iBAAK,EAAL,KAAK,EAAE,GAAG,EAAH,GAAG,EAAE,IAAI,EAAJ,IAAI;WACjB,CAAC,CAAC;AACH,iBAAO,CAAC,CAAC,OAAO,CAAC;SAClB;;;;;;;AAOD,qBAAa,EAAE,uBAAC,MAAM,EAAK;AACzB,cAAI,CAAC,GAAG,kBAAK,KAAK,EAAE,CAAC;cAEnB,GAAG,GACD,MAAM,CADR,GAAG;;AAEL,mCAAO,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,UAAC,KAAK,EAAK;AAChC,gBAAI,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KACtB,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;WACxB,CAAC,CAAC;AACH,iBAAO,CAAC,CAAC,OAAO,CAAC;SAClB;;;;;;AAMD,oBAAY,EAAE,sBAAC,MAAM,EAAK;AACxB,cAAI,CAAC,GAAG,kBAAK,KAAK,EAAE,CAAC;cAEnB,KAAK,GACH,MAAM,CADR,KAAK;cAAE,GAAG,GACR,MAAM,CADD,GAAG;;AAEZ,gBAAK,KAAK,CAAC,QAAQ,CAChB,OAAO,CAAC,CAAC,KAAK,CAAC,EAAE;AAChB,gBAAI,EAAE,KAAK;WACZ,EAAE;AACD,eAAG,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI;WACpB,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,YAAM;AACjB,aAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;WACnB,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;AAC3B,iBAAO,CAAC,CAAC,OAAO,CAAC;SAClB;;;;;;;AAOD,oBAAY,EAAE,sBAAC,MAAM,EAAK;AACxB,cAAI,CAAC,GAAG,kBAAK,KAAK,EAAE,CAAC;cAEnB,GAAG,GACD,MAAM,CADR,GAAG;cAAE,IAAI,GACP,MAAM,CADH,IAAI;;AAGX,+BAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;AACrC,mBAAO,EAAE,IAAI;WACd,EAAE,UAAA,KAAK,EAAI;AACV,gBAAI,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KACtB;AACH,eAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aACnB;WACF,CAAC,CAAC;AACH,iBAAO,CAAC,CAAC,OAAO,CAAC;SAClB;;;;;;;AAOD,mBAAW,EAAE,qBAAC,MAAM,EAAK;AACvB,cAAI,CAAC,GAAG,kBAAK,KAAK,EAAE,CAAC;cAEnB,GAAG,GACD,MAAM,CADR,GAAG;cAAE,IAAI,GACP,MAAM,CADH,IAAI;;AAEX,+BAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE;AACnC,mBAAO,EAAE,IAAI;WACd,EAAE,UAAA,KAAK,EAAI;AACV,gBAAI,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KACtB;AACH,eAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aACnB;WACF,CAAC,CAAC;AACH,iBAAO,CAAC,CAAC,OAAO,CAAC;SAClB;;;;;;;AAOD,oBAAY,EAAE,sBAAC,MAAM,EAAK;AACxB,cAAI,CAAC,GAAG,kBAAK,KAAK,EAAE,CAAC;cAEnB,GAAG,GACD,MAAM,CADR,GAAG;cAAE,IAAI,GACP,MAAM,CADH,IAAI;;AAGX,+BAAK,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE;AAC/C,mBAAO,EAAE,IAAI;WACd,EAAE,UAAA,KAAK,EAAI;AACV,gBAAI,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KACtB;AACH,eAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;aACnB;WACF,CAAC,CAAC;AACH,iBAAO,CAAC,CAAC,OAAO,CAAC;SAClB;;;;;;AAMD,yBAAiB,EAAE,2BAAC,MAAM,EAAK;AAC7B,cAAI,CAAC,GAAG,kBAAK,KAAK,EAAE,CAAC;cAEnB,IAAI,GACF,MAAM,CADR,IAAI;cAAE,GAAG,GACP,MAAM,CADF,GAAG;cAAE,KAAK,GACd,MAAM,CADG,KAAK;;AAElB,cAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,YAAY,CAAC;;AAE7C,+BAAK,QAAQ,CAAC,IAAI,EAAE,UAAC,KAAK,EAAE,IAAI,EAAK;AACnC,gBAAI,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KACtB,CAAC,CAAC,OAAO,CAAC;AACb,kBAAI,EAAJ,IAAI,EAAE,GAAG,EAAH,GAAG,EAAE,KAAK,EAAL,KAAK;AAChB,sBAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE;aAC1B,CAAC,CAAC;WACJ,CAAC,CAAC;AACH,iBAAO,CAAC,CAAC,OAAO,CAAC;SAClB;;;;;;;AAOD,yBAAiB,EAAE,2BAAC,MAAM,EAAK;AAC7B,cAAI,CAAC,GAAG,kBAAK,KAAK,EAAE,CAAC;cAEnB,IAAI,GACF,MAAM,CADR,IAAI;;AAEN,gCAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAM;AACnC,aAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;WACnB,CAAC,CAAC;AACH,iBAAO,CAAC,CAAC,OAAO,CAAC;SAClB;;;;;;AAMD,qBAAa,EAAE,uBAAC,MAAM,EAAK;AACzB,cAAI,CAAC,GAAG,kBAAK,KAAK,EAAE,CAAC;cAEnB,GAAG,GACD,MAAM,CADR,GAAG;;AAEL,gCAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAM;AAC/B,aAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;WACnB,CAAC,CAAC;AACH,iBAAO,CAAC,CAAC,OAAO,CAAC;SAClB;OACF,CAAC;;;AAGF,UAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE;AACrC,SAAC,CAAC,OAAO,CAAC;AACR,kBAAQ,EAAE,qBAAK,YAAY,CACzB,kBAAK,OAAO,CAAC,SAAS,EACpB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE;SAC5C,CAAC,CAAC;OACJ,MAAM;;;AAGL,gBAAQ,CAAC,UAAU,EAAE;;SAElB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;;SAE5B,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;;SAE3B,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;;SAE3B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;;SAE1B,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;;SAE3B,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC;;SAEhC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC;;SAEhC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;;SAE5B,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;OACpB;AACD,aAAO,CAAC,CAAC,OAAO,CAAC;KAClB;;;SAvSG,KAAK;;;qBA4SI,UAAC,KAAK,EAAK;AACxB,SAAO,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;CACzB","file":"theme.js","sourcesContent":["'use strict';\nimport bower from 'bower';\nimport when from 'when';\nimport Path from 'path';\nimport mkdirp from 'mkdirp';\nimport _ from 'lodash';\nimport File from 'fs-extra';\nimport del from 'del';\nimport 'source-map-support/register';\nimport root from 'app-root-path';\n/**\n * The class that installs themes.\n * @class  Theme\n */\nclass Theme {\n  constructor(options) {\n      this.bower = bower;\n      this.options = {\n        theme: {\n          name: options.theme,\n          path: Path.join(root.path, 'theme/'),\n          target: {\n            path: options.target\n          }\n        },\n        template: {\n          path: options.template.path,\n          isEnabled: () => {\n            return !!options.template.path;\n          }\n        }\n      };\n    }\n    /** \n     * Installs the theme and its assets\n     * @return {Function} The promise\n     */\n  install() {\n    let d = when.defer();\n\n    /** \n     * The commands to install the theme\n     * @type {object}\n     */\n    let commands = {\n      /**\n       * Create necessary paths to \n       * process the commands\n       * @return {Function}       The promise\n       */\n      preProcess: () => {\n        let d = when.defer();\n        let theme = this.options.theme.name;\n        // Create short-hands for paths\n\n        // Sources\n        var src = {\n          theme: {\n            path: this.options.theme.path\n          }\n        };\n\n        // Destinations\n        var dest = {\n          theme: {\n            path: this.options.theme.target.path\n          }\n        };\n\n        // Assets dir\n        let assets = {\n          path: Path.join(Path.join(\n              src.theme.path, 'bower_components/'),\n            theme + '/assets/')\n        };\n\n        // Template dir\n        let template = {\n          path: Path.join(Path.join(\n              src.theme.path, 'bower_components/'),\n            theme + '/template/')\n        };\n\n        // The css dir within assets dir\n        _.extend(src, {\n          css: {\n            path: Path.join(assets.path, 'css/')\n          }\n        });\n        _.extend(dest, {\n          css: {\n            path: Path.join(dest.theme.path, 'css/')\n          }\n        });\n\n        // The js dir within assets dir\n        _.extend(src, {\n          js: {\n            path: Path.join(assets.path, 'js/')\n          }\n        });\n        _.extend(dest, {\n          js: {\n            path: Path.join(dest.theme.path, 'js/')\n          }\n        });\n\n        // The bower template dir within assets dir\n        _.extend(src, {\n          template\n        });\n        _.extend(dest, {\n          template: {\n            path: Path.join(dest.theme.path, 'template/')\n          }\n        });\n\n        d.resolve({\n          theme, src, dest\n        });\n        return d.promise;\n      },\n      /**\n       * Creates a temp dir for bower\n       * to install the bower components\n       * @param  {object} result The result\n       * @return {Function}        The promise\n       */\n      createTempDir: (result) => {\n        let d = when.defer();\n        var {\n          src\n        } = result;\n        mkdirp(src.theme.path, (error) => {\n          if (error) d.reject(error);\n          else d.resolve(result);\n        });\n        return d.promise;\n      },\n      /** \n       * Installs the theme through bower\n       * @param  {object} result The result\n       * @return {Function}       The promise\n       */\n      installTheme: (result) => {\n        var d = when.defer();\n        var {\n          theme, src\n        } = result;\n        this.bower.commands\n          .install([theme], {\n            save: false\n          }, {\n            cwd: src.theme.path\n          }).on('end', () => {\n            d.resolve(result);\n          }).on('error', d.reject);\n        return d.promise;\n      },\n      /**\n       * Copies the css dir from the assets dir\n       * to the target dir\n       * @param  {object} result The result\n       * @return {Function}        The promise\n       */\n      copyAssetCSS: (result) => {\n        let d = when.defer();\n        var {\n          src, dest\n        } = result;\n\n        File.copy(src.css.path, dest.css.path, {\n          clobber: true\n        }, error => {\n          if (error) d.reject(error);\n          else {\n            d.resolve(result);\n          }\n        });\n        return d.promise;\n      },\n      /**\n       * Copies the js dir from the assets dir\n       * to the target dir\n       * @param  {object} result The result\n       * @return {Function}        The promise\n       */\n      copyAssetJS: (result) => {\n        let d = when.defer();\n        var {\n          src, dest\n        } = result;\n        File.copy(src.js.path, dest.js.path, {\n          clobber: true\n        }, error => {\n          if (error) d.reject(error);\n          else {\n            d.resolve(result);\n          }\n        });\n        return d.promise;\n      },\n      /**\n       * Copies the template dir from the assets dir\n       * to the target dir\n       * @param  {object} result The result\n       * @return {Function}        The promise\n       */\n      copyTemplate: (result) => {\n        let d = when.defer();\n        var {\n          src, dest\n        } = result;\n\n        File.copy(src.template.path, dest.template.path, {\n          clobber: true\n        }, error => {\n          if (error) d.reject(error);\n          else {\n            d.resolve(result);\n          }\n        });\n        return d.promise;\n      },\n      /** \n       * Reads the template and strigifies it.\n       * @param  {object} result The result\n       * @return {Function}      The promise\n       */\n      stringifyTemplate: (result) => {\n        let d = when.defer();\n        var {\n          dest, src, theme\n        } = result;\n        let file = dest.template.path + 'index.jade';\n\n        File.readFile(file, (error, data) => {\n          if (error) d.reject(error);\n          else d.resolve({\n            dest, src, theme,\n            template: data.toString()\n          });\n        });\n        return d.promise;\n      },\n      /**\n       * Removes the template dir from\n       * the target dir\n       * @param  {object} result The result\n       * @return {Function}        The promise\n       */\n      deleteTemplateDir: (result) => {\n        let d = when.defer();\n        var {\n          dest\n        } = result;\n        del([dest.template.path]).then(() => {\n          d.resolve(result);\n        });\n        return d.promise;\n      },\n      /**\n       * Removes the temp dir\n       * @param  {object} result The result\n       * @return {Function}        The promise\n       */\n      deleteTempDir: (result) => {\n        let d = when.defer();\n        var {\n          src\n        } = result;\n        del([src.theme.path]).then(() => {\n          d.resolve(result);\n        });\n        return d.promise;\n      }\n    };\n\n    // Check if the template is enabled (legacy)\n    if (this.options.template.isEnabled()) {\n      d.resolve({\n        template: File.readFileSync(\n          Path.resolve(__dirname,\n            this.options.template.path)).toString()\n      });\n    } else {\n\n      // Preprocess the commands\n      commands.preProcess()\n        // Create a temp dir\n        .then(commands.createTempDir)\n        // Install the theme using bower\n        .then(commands.installTheme)\n        // Copy css dir files\n        .then(commands.copyAssetCSS)\n        // Copy the js dir & files\n        .then(commands.copyAssetJS)\n        // Copy the template dir & file\n        .then(commands.copyTemplate)\n        // Convert the template to a string\n        .then(commands.stringifyTemplate)\n        // Delete the template dir\n        .then(commands.deleteTemplateDir)\n        // Delete the temp dir\n        .then(commands.deleteTempDir)\n        // We're done!\n        .then(d.resolve);\n    }\n    return d.promise;\n  }\n\n}\n\n\nexport default (theme) => {\n  return new Theme(theme);\n};"],"sourceRoot":"/source/"}
{"version":3,"sources":["option.js"],"names":[],"mappings":";AACA,YAAY,CAAC;;;;;;;;;;;oBACI,MAAM;;;;sBACT,QAAQ;;;;QACf,6BAA6B;;;;;;;IAK9B,MAAM;AACC,WADP,MAAM,CACE,OAAO,EAAE;0BADjB,MAAM;;AAEN,QAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAClC,QAAI,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;GACvC;;;;;;eAJC,MAAM;;WAQA,oBAAC,OAAO,EAAE;AAChB,UAAI,OAAO,CAAC,KAAK,EAAE;AACjB,YAAI,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;OACpC;AACD,UAAI,OAAO,CAAC,SAAS,EAAE;AACrB,YAAI,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;OAC5C;AACD,UAAI,OAAO,CAAC,QAAQ,EAAE;AACpB,YAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC,QAAQ,CAAC;OAC/C;AACD,UAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AACnB,eAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC,CAAC;AACvE,eAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OACjB,MACC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AACvC,UAAI,OAAO,CAAC,MAAM,EAAE;AAClB,YAAI,CAAC,OAAO,CAAC,MAAM,GAAG,kBAAK,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,IAC/D,OAAO,CAAC,GAAG,EAAE,CAAC;OACjB;AACD,UAAI,OAAO,CAAC,MAAM,EAAE;AAClB,YAAI,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,MAAM,CACpC,IAAI,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;OACvC;AACD,UAAI,OAAO,CAAC,MAAM,EAAE;AAClB,YAAI,CAAC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;OACtC;AACD,UAAI,OAAO,CAAC,KAAK,EAAE;AACjB,YAAI,oBAAE,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,oBAAE,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AAC1D,cAAI,CAAC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,GAC5D,OAAO,CAAC,KAAK,GAAG,aAAa,GAAG,OAAO,CAAC,KAAK,CAAC;SACjD,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,oBAAoB,CAAC;OAClD;KACF;;;;;;;;WAKO,sBAAG;AACT,aAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;;;;;;WAKQ,uBAAG;AACZ,aAAO;;AAEL,eAAO,EAAE,SAAS;;AAElB,gBAAQ,EAAE,EAAE;;AAEZ,gBAAQ,EAAE,EAAE;;AAEZ,mBAAW,EAAE,MAAM;;AAEnB,mBAAW,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,CAAC;;;AAGnF,gBAAQ,EAAE,EAAE;AACZ,iBAAS,EAAE,SAAS;AACpB,kBAAU,EAAE;AACV,gBAAM,EAAE,SAAS;SAClB;AACD,eAAO,EAAE,oBAAoB;OAC9B,CAAC;KACH;;;SAzEG,MAAM;;;qBA2EG,UAAC,OAAO,EAAK;AAC1B,SAAO,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;CAC5B","file":"option.js","sourcesContent":["///*global process */ \n'use strict';\nimport path from 'path';\nimport _ from 'lodash';\nimport 'source-map-support/register';\n/**  \n * The class that sets the options.  \n * @class Option  \n */\nclass Option {\n  constructor(options) {\n      this.options = this.getDefaults();\n      if (options) this.setOptions(options);\n    }\n    /**      \n     * Sets the options      \n     */\n  setOptions(options) {\n      if (options.title) {\n        this.options.title = options.title;\n      }\n      if (options.extension) {\n        this.options.extension = options.extension;\n      }\n      if (options.template) {\n        this.options.template.path = options.template;\n      }\n      if (!options.source) {\n        console.error(new Error('Mr. Doc [error]: You must define a source.'));\n        process.exit(1);\n      } else\n        this.options.source = options.source;\n      if (options.target) {\n        this.options.target = path.resolve(process.cwd(), options.target) ||\n          process.cwd();\n      }\n      if (options.ignore) {\n        this.options.blacklist = options.ignore\n          .trim().replace(' ', '').split(',');\n      }\n      if (options.readme) {\n        this.options.readme = options.readme;\n      }\n      if (options.theme) {\n        if (_.isString(options.theme) && !_.isEmpty(options.theme)) {\n          this.options.theme = options.theme.indexOf('doxx-theme-') > -1 ?\n            options.theme : 'doxx-theme-' + options.theme;\n        } else this.options.theme = 'doxx-theme-default';\n      }\n    }\n    /**      \n     * Returns the current options.      \n     * @return {object} The current options      \n     */\n  getOptions() {\n      return this.options;\n    }\n    /**      \n     * Returns the default options.      \n     * @return {object} The default options      \n     */\n  getDefaults() {\n    return {\n      // The title for the page produced       \n      'title': undefined,\n      // The folder which should get parsed       \n      'source': '',\n      // The folder which will contain the results.       \n      'target': '',\n      // The target files extension.       \n      'extension': 'html',\n      // The comma seperated list of directories to ignore. (alias for ignore)       \n      'blacklist': ['test', 'public', 'static', 'view', 'views', 'template', 'templates'],\n      // The markdown file to use on the main page of the documentations.        \n      // Checks the current directory for a package.json or README.md by default      \n      'readme': '',\n      'package': undefined,\n      'template': {\n        'path': undefined\n      },\n      'theme': 'doxx-theme-default'\n    };\n  }\n}\nexport default (options) => {\n  return new Option(options);\n};"],"sourceRoot":"/source/"}